// ----------------------------------------------------------------------------------
// Microsoft Developer & Platform Evangelism
// 
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
// THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, 
// EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES 
// OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
// ----------------------------------------------------------------------------------
// The example companies, organizations, products, domain names,
// e-mail addresses, logos, people, places, and events depicted
// herein are fictitious.  No association with any real company,
// organization, product, domain name, email address, logo, person,
// places, or events is intended or should be inferred.
// ----------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Expenses.WcfService.ServiceCore.InternalService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InternalService.IInternalService")]
    public interface IInternalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInternalService/ProcessReport", ReplyAction="http://tempuri.org/IInternalService/ProcessReportResponse")]
        void ProcessReport(int expenseReportId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInternalService/ProcessReport", ReplyAction="http://tempuri.org/IInternalService/ProcessReportResponse")]
        System.Threading.Tasks.Task ProcessReportAsync(int expenseReportId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInternalServiceChannel : Expenses.WcfService.ServiceCore.InternalService.IInternalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InternalServiceClient : System.ServiceModel.ClientBase<Expenses.WcfService.ServiceCore.InternalService.IInternalService>, Expenses.WcfService.ServiceCore.InternalService.IInternalService {
        
        public InternalServiceClient() {
        }
        
        public InternalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InternalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InternalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InternalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ProcessReport(int expenseReportId) {
            base.Channel.ProcessReport(expenseReportId);
        }
        
        public System.Threading.Tasks.Task ProcessReportAsync(int expenseReportId) {
            return base.Channel.ProcessReportAsync(expenseReportId);
        }
    }
}
