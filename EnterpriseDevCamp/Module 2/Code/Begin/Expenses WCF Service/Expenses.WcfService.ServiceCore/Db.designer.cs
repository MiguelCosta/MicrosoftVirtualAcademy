// ----------------------------------------------------------------------------------
// Microsoft Developer & Platform Evangelism
// 
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
// THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, 
// EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES 
// OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
// ----------------------------------------------------------------------------------
// The example companies, organizations, products, domain names,
// e-mail addresses, logos, people, places, and events depicted
// herein are fictitious.  No association with any real company,
// organization, product, domain name, email address, logo, person,
// places, or events is intended or should be inferred.
// ----------------------------------------------------------------------------------

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18331
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Expenses.WcfService.ServiceCore
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Expenses")]
	public partial class DbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCharge(Charge instance);
    partial void UpdateCharge(Charge instance);
    partial void DeleteCharge(Charge instance);
    partial void InsertExpenseReport(ExpenseReport instance);
    partial void UpdateExpenseReport(ExpenseReport instance);
    partial void DeleteExpenseReport(ExpenseReport instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    #endregion
		
		public DbDataContext() : 
				base(global::Expenses.WcfService.ServiceCore.Properties.Settings.Default.ExpensesConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Charge> Charges
		{
			get
			{
				return this.GetTable<Charge>();
			}
		}
		
		public System.Data.Linq.Table<ExpenseReport> ExpenseReports
		{
			get
			{
				return this.GetTable<ExpenseReport>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Charges")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Charge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChargeId;
		
		private int _EmployeeId;
		
		private System.Nullable<int> _ExpenseReportId;
		
		private System.DateTime _ExpenseDate;
		
		private string _Merchant;
		
		private string _Location;
		
		private decimal _BilledAmount;
		
		private decimal _TransactionAmount;
		
		private string _Description;
		
		private int _Category;
		
		private int _AccountNumber;
		
		private bool _ReceiptRequired;
		
		private string _Notes;
		
		private int _ExpenseType;
		
		private EntityRef<ExpenseReport> _ExpenseReport;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChargeIdChanging(int value);
    partial void OnChargeIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnExpenseReportIdChanging(System.Nullable<int> value);
    partial void OnExpenseReportIdChanged();
    partial void OnExpenseDateChanging(System.DateTime value);
    partial void OnExpenseDateChanged();
    partial void OnMerchantChanging(string value);
    partial void OnMerchantChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnBilledAmountChanging(decimal value);
    partial void OnBilledAmountChanged();
    partial void OnTransactionAmountChanging(decimal value);
    partial void OnTransactionAmountChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCategoryChanging(int value);
    partial void OnCategoryChanged();
    partial void OnAccountNumberChanging(int value);
    partial void OnAccountNumberChanged();
    partial void OnReceiptRequiredChanging(bool value);
    partial void OnReceiptRequiredChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnExpenseTypeChanging(int value);
    partial void OnExpenseTypeChanged();
    #endregion
		
		public Charge()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ChargeId
		{
			get
			{
				return this._ChargeId;
			}
			set
			{
				if ((this._ChargeId != value))
				{
					this.OnChargeIdChanging(value);
					this.SendPropertyChanging();
					this._ChargeId = value;
					this.SendPropertyChanged("ChargeId");
					this.OnChargeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseReportId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> ExpenseReportId
		{
			get
			{
				return this._ExpenseReportId;
			}
			set
			{
				if ((this._ExpenseReportId != value))
				{
					if (this._ExpenseReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpenseReportIdChanging(value);
					this.SendPropertyChanging();
					this._ExpenseReportId = value;
					this.SendPropertyChanged("ExpenseReportId");
					this.OnExpenseReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseDate", DbType="Date NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime ExpenseDate
		{
			get
			{
				return this._ExpenseDate;
			}
			set
			{
				if ((this._ExpenseDate != value))
				{
					this.OnExpenseDateChanging(value);
					this.SendPropertyChanging();
					this._ExpenseDate = value;
					this.SendPropertyChanged("ExpenseDate");
					this.OnExpenseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Merchant", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Merchant
		{
			get
			{
				return this._Merchant;
			}
			set
			{
				if ((this._Merchant != value))
				{
					this.OnMerchantChanging(value);
					this.SendPropertyChanging();
					this._Merchant = value;
					this.SendPropertyChanged("Merchant");
					this.OnMerchantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BilledAmount", DbType="SmallMoney NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public decimal BilledAmount
		{
			get
			{
				return this._BilledAmount;
			}
			set
			{
				if ((this._BilledAmount != value))
				{
					this.OnBilledAmountChanging(value);
					this.SendPropertyChanging();
					this._BilledAmount = value;
					this.SendPropertyChanged("BilledAmount");
					this.OnBilledAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionAmount", DbType="SmallMoney NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public decimal TransactionAmount
		{
			get
			{
				return this._TransactionAmount;
			}
			set
			{
				if ((this._TransactionAmount != value))
				{
					this.OnTransactionAmountChanging(value);
					this.SendPropertyChanging();
					this._TransactionAmount = value;
					this.SendPropertyChanged("TransactionAmount");
					this.OnTransactionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public int Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public int AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptRequired", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public bool ReceiptRequired
		{
			get
			{
				return this._ReceiptRequired;
			}
			set
			{
				if ((this._ReceiptRequired != value))
				{
					this.OnReceiptRequiredChanging(value);
					this.SendPropertyChanging();
					this._ReceiptRequired = value;
					this.SendPropertyChanged("ReceiptRequired");
					this.OnReceiptRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseType", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public int ExpenseType
		{
			get
			{
				return this._ExpenseType;
			}
			set
			{
				if ((this._ExpenseType != value))
				{
					this.OnExpenseTypeChanging(value);
					this.SendPropertyChanging();
					this._ExpenseType = value;
					this.SendPropertyChanged("ExpenseType");
					this.OnExpenseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExpenseReport_Charge", Storage="_ExpenseReport", ThisKey="ExpenseReportId", OtherKey="ExpenseReportId", IsForeignKey=true)]
		public ExpenseReport ExpenseReport
		{
			get
			{
				return this._ExpenseReport.Entity;
			}
			set
			{
				ExpenseReport previousValue = this._ExpenseReport.Entity;
				if (((previousValue != value) 
							|| (this._ExpenseReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExpenseReport.Entity = null;
						previousValue.Charges.Remove(this);
					}
					this._ExpenseReport.Entity = value;
					if ((value != null))
					{
						value.Charges.Add(this);
						this._ExpenseReportId = value.ExpenseReportId;
					}
					else
					{
						this._ExpenseReportId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExpenseReport");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Charge", Storage="_Employee", ThisKey="EmployeeId", OtherKey="EmployeeId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Charges.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Charges.Add(this);
						this._EmployeeId = value.EmployeeId;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ExpenseReport = default(EntityRef<ExpenseReport>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExpenseReports")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ExpenseReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExpenseReportId;
		
		private int _EmployeeId;
		
		private decimal _Amount;
		
		private string _Purpose;
		
		private string _Approver;
		
		private int _CostCenter;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _DateSubmitted;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _DateResolved;
		
		private decimal _OwedToCreditCard;
		
		private decimal _OwedToEmployee;
		
		private System.Nullable<System.DateTime> _DateSaved;
		
		private EntitySet<Charge> _Charges;
		
		private EntityRef<Employee> _Employee;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExpenseReportIdChanging(int value);
    partial void OnExpenseReportIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPurposeChanging(string value);
    partial void OnPurposeChanged();
    partial void OnApproverChanging(string value);
    partial void OnApproverChanged();
    partial void OnCostCenterChanging(int value);
    partial void OnCostCenterChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDateSubmittedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSubmittedChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnDateResolvedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateResolvedChanged();
    partial void OnOwedToCreditCardChanging(decimal value);
    partial void OnOwedToCreditCardChanged();
    partial void OnOwedToEmployeeChanging(decimal value);
    partial void OnOwedToEmployeeChanged();
    partial void OnDateSavedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSavedChanged();
    #endregion
		
		public ExpenseReport()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseReportId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ExpenseReportId
		{
			get
			{
				return this._ExpenseReportId;
			}
			set
			{
				if ((this._ExpenseReportId != value))
				{
					this.OnExpenseReportIdChanging(value);
					this.SendPropertyChanging();
					this._ExpenseReportId = value;
					this.SendPropertyChanged("ExpenseReportId");
					this.OnExpenseReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="SmallMoney NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purpose", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Purpose
		{
			get
			{
				return this._Purpose;
			}
			set
			{
				if ((this._Purpose != value))
				{
					this.OnPurposeChanging(value);
					this.SendPropertyChanging();
					this._Purpose = value;
					this.SendPropertyChanged("Purpose");
					this.OnPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approver", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Approver
		{
			get
			{
				return this._Approver;
			}
			set
			{
				if ((this._Approver != value))
				{
					this.OnApproverChanging(value);
					this.SendPropertyChanging();
					this._Approver = value;
					this.SendPropertyChanged("Approver");
					this.OnApproverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCenter", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int CostCenter
		{
			get
			{
				return this._CostCenter;
			}
			set
			{
				if ((this._CostCenter != value))
				{
					this.OnCostCenterChanging(value);
					this.SendPropertyChanging();
					this._CostCenter = value;
					this.SendPropertyChanged("CostCenter");
					this.OnCostCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSubmitted", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> DateSubmitted
		{
			get
			{
				return this._DateSubmitted;
			}
			set
			{
				if ((this._DateSubmitted != value))
				{
					this.OnDateSubmittedChanging(value);
					this.SendPropertyChanging();
					this._DateSubmitted = value;
					this.SendPropertyChanged("DateSubmitted");
					this.OnDateSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateResolved", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.DateTime> DateResolved
		{
			get
			{
				return this._DateResolved;
			}
			set
			{
				if ((this._DateResolved != value))
				{
					this.OnDateResolvedChanging(value);
					this.SendPropertyChanging();
					this._DateResolved = value;
					this.SendPropertyChanged("DateResolved");
					this.OnDateResolvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwedToCreditCard", DbType="SmallMoney NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public decimal OwedToCreditCard
		{
			get
			{
				return this._OwedToCreditCard;
			}
			set
			{
				if ((this._OwedToCreditCard != value))
				{
					this.OnOwedToCreditCardChanging(value);
					this.SendPropertyChanging();
					this._OwedToCreditCard = value;
					this.SendPropertyChanged("OwedToCreditCard");
					this.OnOwedToCreditCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwedToEmployee", DbType="SmallMoney NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public decimal OwedToEmployee
		{
			get
			{
				return this._OwedToEmployee;
			}
			set
			{
				if ((this._OwedToEmployee != value))
				{
					this.OnOwedToEmployeeChanging(value);
					this.SendPropertyChanging();
					this._OwedToEmployee = value;
					this.SendPropertyChanged("OwedToEmployee");
					this.OnOwedToEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSaved", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<System.DateTime> DateSaved
		{
			get
			{
				return this._DateSaved;
			}
			set
			{
				if ((this._DateSaved != value))
				{
					this.OnDateSavedChanging(value);
					this.SendPropertyChanging();
					this._DateSaved = value;
					this.SendPropertyChanged("DateSaved");
					this.OnDateSavedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExpenseReport_Charge", Storage="_Charges", ThisKey="ExpenseReportId", OtherKey="ExpenseReportId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<Charge> Charges
		{
			get
			{
				if ((this.serializing 
							&& (this._Charges.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Charges;
			}
			set
			{
				this._Charges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ExpenseReport", Storage="_Employee", ThisKey="EmployeeId", OtherKey="EmployeeId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.ExpenseReports.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.ExpenseReports.Add(this);
						this._EmployeeId = value.EmployeeId;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Charges(Charge entity)
		{
			this.SendPropertyChanging();
			entity.ExpenseReport = this;
		}
		
		private void detach_Charges(Charge entity)
		{
			this.SendPropertyChanging();
			entity.ExpenseReport = null;
		}
		
		private void Initialize()
		{
			this._Charges = new EntitySet<Charge>(new Action<Charge>(this.attach_Charges), new Action<Charge>(this.detach_Charges));
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeId;
		
		private string _Name;
		
		private string _Alias;
		
		private string _Manager;
		
		private EntitySet<Charge> _Charges;
		
		private EntitySet<ExpenseReport> _ExpenseReports;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAliasChanging(string value);
    partial void OnAliasChanged();
    partial void OnManagerChanging(string value);
    partial void OnManagerChanged();
    #endregion
		
		public Employee()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alias", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Alias
		{
			get
			{
				return this._Alias;
			}
			set
			{
				if ((this._Alias != value))
				{
					this.OnAliasChanging(value);
					this.SendPropertyChanging();
					this._Alias = value;
					this.SendPropertyChanged("Alias");
					this.OnAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					this.OnManagerChanging(value);
					this.SendPropertyChanging();
					this._Manager = value;
					this.SendPropertyChanged("Manager");
					this.OnManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Charge", Storage="_Charges", ThisKey="EmployeeId", OtherKey="EmployeeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<Charge> Charges
		{
			get
			{
				if ((this.serializing 
							&& (this._Charges.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Charges;
			}
			set
			{
				this._Charges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ExpenseReport", Storage="_ExpenseReports", ThisKey="EmployeeId", OtherKey="EmployeeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<ExpenseReport> ExpenseReports
		{
			get
			{
				if ((this.serializing 
							&& (this._ExpenseReports.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ExpenseReports;
			}
			set
			{
				this._ExpenseReports.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Charges(Charge entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Charges(Charge entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_ExpenseReports(ExpenseReport entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_ExpenseReports(ExpenseReport entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void Initialize()
		{
			this._Charges = new EntitySet<Charge>(new Action<Charge>(this.attach_Charges), new Action<Charge>(this.detach_Charges));
			this._ExpenseReports = new EntitySet<ExpenseReport>(new Action<ExpenseReport>(this.attach_ExpenseReports), new Action<ExpenseReport>(this.detach_ExpenseReports));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
}
#pragma warning restore 1591
